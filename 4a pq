class PriorityQueue:
    def __init__(self):
       self.heap=[]
       
    def parent(self,i):
        return (i-1)//2
    
    def leftChild(self,i):
        return (2*i)+1
    
    def rightChild(self,i):
        return (2*i)+2

    def shiftUp(self,i):
        while i>0 and self.heap[i] > self.heap[self.parent(i)]:
            self.heap [i], self.heap[self.parent(i)] = self.heap[self.parent(i)] ,self.heap[i] 
            i=self.parent(i)
    
    def insert(self,p):
        self.heap.append(p)
        self.shiftUp(len(self.heap)-1)
          
    def getMax(self):
        if len(self.heap)>0:
            return self.heap[0]
        return None
    
    def getPriorityQueue(self):
        return self.heap

pq=PriorityQueue()
pq.insert(30)
pq.insert(20)
pq.insert(12)
pq.insert(14)
pq.insert(40)

print("max element:", pq.getMax())
print("Priority Queue:",pq.getPriorityQueue())
